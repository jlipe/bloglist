{"version":3,"sources":["services/blogs.js","reducers/notificationReducer.js","reducers/blogReducer.js","services/login.js","services/users.js","reducers/userReducer.js","store.js","components/Togglable.js","components/Notification.js","hooks/index.js","components/LoginForm.js","components/Users.js","components/BlogList.js","components/BlogForm.js","components/User.js","components/Blog.js","components/BlogNav.js","components/SignUp.js","App.js","index.js"],"names":["token","currentMessageId","setMessage","message","type","seconds","clearInterval","dispatch","a","setTimeout","data","reducer","state","action","console","log","baseUrl","create","newObject","config","headers","Authorization","axios","post","response","update","id","put","addComment","comment","blogid","setToken","newToken","getAll","get","then","remove","delete","slice","sort","b","likes","map","blog","comments","concat","filter","login","credentials","addUser","user","combineReducers","notificationReducer","blogs","blogReducer","userReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hiddenWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","Button","className","onClick","buttonLabel","children","variant","displayName","Notification","useSelector","Alert","useField","value","setValue","onChange","event","target","loginForm","useDispatch","history","useHistory","username","password","Container","fluid","Form","onSubmit","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","blogService","Promise","reject","loginUser","push","catch","Group","controlId","Label","Control","to","User","userCount","count","Table","Object","keys","name","BlogList","renderedBlogs","title","author","deleteBlog","striped","bordered","hover","BlogForm","handleSubmit","setTitle","setAuthor","url","setUrl","required","Users","useParams","userBlogs","length","renderedBlogList","ListGroup","Item","Blog","newComment","setNewComment","find","renderedComments","index","href","size","vote","inline","updatedBlog","BlogNav","Navbar","bg","expand","Nav","Link","as","Brand","parse","getItem","removeItem","SignUp","userService","placeholder","Text","App","process","useEffect","loggedUserJSON","blogFormRef","useRef","path","LoginForm","addedBlog","createBlog","current","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6e1c1bf5.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (newObject, id) => {\n  if (!id) {\n    id = newObject.id\n  }\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.put(baseUrl + `/${id}`, newObject, config)\n  return response.data\n}\n\nconst addComment = async (comment, blogid) => {\n  console.log('comment', comment)\n  const response = await axios.post(baseUrl + `/${blogid}/comments`, { comment })\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.delete(baseUrl + `/${id}`, config)\n  return response.data\n}\n\nexport default { setToken, getAll, create, update, remove, addComment }","const reducer = (state = { message: '', type: null }, action) => {\n  console.log('Action: ', action)\n  console.log('State: ', state)\n  switch(action.type) {\n  case('SET_MESSAGE'):\n    return { message: action.data.message, type: action.data.type }\n  default:\n    return state\n  }\n}\n\nlet currentMessageId = null\n\nexport const setMessage = (message, type, seconds) => {\n  if (currentMessageId) {\n    clearInterval(currentMessageId)\n  }\n\n  return async dispatch => {\n    currentMessageId = setTimeout(() => {\n      dispatch({ type: 'SET_MESSAGE', data: { message: '', type: null } })\n    }, 1000 * seconds)\n\n    dispatch({\n      type: 'SET_MESSAGE',\n      data: { message, type }\n    })\n  }\n}\n\nexport default reducer","import blogService from '../services/blogs'\n\nimport { setMessage } from './notificationReducer'\n\nconst reducer = (state = [], action) => {\n  console.log('Action: ', action)\n  console.log('State: ', state)\n  switch(action.type) {\n  case('INIT_BLOGS'):\n    return action.data\n  case('SORT_BLOGS'):\n    return state.slice().sort(function (a, b) {\n      return b.likes - a.likes\n    })\n  case('ADD_COMMENT'):\n    return state.map(blog => blog.id === action.data.id ? blog.comments = blog.comments.concat(action.data.comment) : blog)\n  case('ADD_BLOG'):\n    return [...state, action.data.blog]\n  case('UPDATE_BLOG'): {\n    return state.map(blog => blog.id === action.data.blog.id ? action.data.blog : blog)\n  }\n  case('REMOVE_BLOG'):\n    return state.filter(blog => blog.id !== action.data.id)\n  default:\n    return state\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs\n    })\n  }\n}\n\nexport const sortBlogs = () => {\n  return async dispatch => {\n    dispatch({ type: 'SORT_BLOGS' })\n  }\n}\n\nexport const createBlog = (blog) => {\n  return async dispatch => {\n    const addedBlog = await blogService.create(blog)\n\n    dispatch({\n      type: 'ADD_BLOG',\n      data: { blog: addedBlog }\n    })\n\n    dispatch(setMessage(`a new blog ${addedBlog.title} by ${addedBlog.author} added`, 'success', 3))\n  }\n}\n\nexport const vote = (blog) => {\n  blog.likes++\n  return async dispatch => {\n    await blogService.update(blog)\n    dispatch({\n      type: 'UPDATE_BLOG',\n      data: { blog }\n    })\n  }\n}\n\nexport const deleteBlog = (blog) => {\n  return async dispatch => {\n    try {\n      const response = await blogService.remove(blog.id)\n      dispatch({\n        type: 'REMOVE_BLOG',\n        data: { id: blog.id }\n      })\n\n      dispatch(setMessage(`${blog.title} successfully removed`, 'success', 3))\n    } catch (e) {\n      dispatch(setMessage('Cannot delete blog', 'danger', 3))\n    }\n  }\n}\n\nexport const addComment = (blog, comment) => {\n  return async dispatch => {\n    const updatedBlog = await blogService.addComment(comment, blog.id)\n    dispatch({\n      type: 'UPDATE_BLOG',\n      data: { blog: updatedBlog }\n    })\n  }\n}\n\nexport default reducer","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst addUser = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { addUser }","import loginService from '../services/login'\nimport blogService from '../services/blogs'\nimport userService from '../services/users'\n\nimport { setMessage } from './notificationReducer'\n\nconst reducer = (state = null, action) => {\n  console.log('Action: ', action.type)\n  console.log('State: ', state)\n  switch(action.type) {\n  case('INIT_USER'):\n    return action.data.user\n  case('SET_USER'):\n    return action.data.user\n  case('REMOVE_USER'):\n    return null\n  default:\n    return state\n  }\n}\n\nexport const loginUser = (username, password) => {\n  return async dispatch => {\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogAppUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      dispatch(setMessage(`${user.username} logged in`, 'success', 3))\n\n      dispatch({\n        type: 'SET_USER',\n        data: { user }\n      })\n\n    } catch(exception) {\n      dispatch(setMessage('Invalid login', 'danger', 3))\n      return Promise.reject('Invalid Login')\n    }\n  }\n}\n\nexport const logoutUser = () => {\n  return async dispatch => {\n    const user = JSON.parse(window.localStorage.getItem('loggedBlogAppUser'))\n    window.localStorage.removeItem('loggedBlogAppUser')\n    blogService.setToken('')\n    dispatch(setMessage(`${user.username} logged out`, 'success', 3))\n    dispatch({\n      type: 'REMOVE_USER'\n    })\n  }\n}\n\nexport const initUser = () => {\n  return async dispatch => {\n\n    const loggedUserJSON = JSON.parse(window.localStorage.getItem('loggedBlogAppUser'))\n    if (loggedUserJSON) {\n      blogService.setToken(loggedUserJSON.token)\n      dispatch({\n        type: 'INIT_USER',\n        data: { user: loggedUserJSON }\n      })\n    }\n  }\n}\n\nexport const addUser = (username, password) => {\n  return async dispatch => {\n    try {\n      const user = await userService.addUser({\n        username, password\n      })\n\n      dispatch(setMessage(`${user.username} successfully added`, 'success', 3))\n\n    } catch(exception) {\n      dispatch(setMessage('Username already in use', 'danger', 3))\n      return Promise.reject('Invalid Login')\n    }\n  }\n}\n\n\n\nexport default reducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport notificationReducer from './reducers/notificationReducer'\nimport blogReducer from './reducers/blogReducer'\nimport userReducer from './reducers/userReducer'\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n} else {\n  console.log = function(){}\n}\n\nconst reducer = combineReducers({\n  message: notificationReducer,\n  blogs: blogReducer,\n  user: userReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Button } from 'react-bootstrap'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hiddenWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hiddenWhenVisible}>\n        <Button className=\"m-2\" onClick={toggleVisibility}>{props.buttonLabel}</Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button className=\"m-2\" variant=\"warning\" onClick={toggleVisibility}>cancel</Button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Alert } from 'react-bootstrap'\n\n\nconst Notification = () => {\n  const message = useSelector(state => state.message)\n\n  if (message.message === '') {\n    return null\n  } else {\n    return (\n      <Alert variant={message.type}>\n        {message.message}\n      </Alert>\n    )\n  }\n}\n\nexport default Notification","import { useState } from 'react'\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  return {\n    type,\n    value,\n    onChange\n  }\n}","import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { useField } from '../hooks'\nimport { loginUser } from '../reducers/userReducer'\n\nimport { Button, Container, Form } from 'react-bootstrap'\n\nimport { useHistory, Link } from 'react-router-dom'\n\nconst loginForm = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const username = useField('text')\n  const password = useField('password')\n\n  const submitForm = (event) => {\n    event.preventDefault()\n    dispatch(loginUser(username.value, password.value))\n      .then(() => history.push('/'))\n      .catch(() => console.log('invalid login'))\n  }\n\n  return (\n    <Container fluid>\n      <h2>Log in to application</h2>\n      <Form onSubmit={submitForm}>\n        <Form.Group controlId=\"formUsername\">\n          <Form.Label>Username:</Form.Label>\n          <Form.Control {...username} />\n        </Form.Group>\n\n        <Form.Group controlId=\"formPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control {...password} />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Login\n        </Button>\n        <Link to=\"/signup\">\n          <Button variant=\"secondary\" className=\"m-2\">\n            Sign Up\n          </Button>\n        </Link>\n      </Form>\n      <p>\n        If you want to post a new blog entry or comment on blogs you must be signed in. Either create an\n        account on the sign up page, or login with the username: &apos;test_user&apos; password: &apos;test_password&apos;\n      </p>\n    </Container>\n  )\n}\n\nexport default loginForm\n","import React from 'react'\nimport { Table } from 'react-bootstrap'\n\nimport { Link } from 'react-router-dom'\n\n\nconst User = ({ blogs }) => {\n  const userCount = {}\n  for (let blog of blogs) {\n    if (blog.user.username in userCount) {\n      userCount[blog.user.username].count++\n    } else {\n      userCount[blog.user.username] = { count: 1, id: blog.user.id }\n    }\n  }\n  return (\n    <div>\n      <h2>Users</h2>\n      <Table>\n        <thead>\n          <tr>\n            <th>User</th>\n            <th># blogs added</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(userCount).map(name => {\n            return (\n              <tr key={userCount[name].id}>\n                <td>\n                  <Link to={`/users/${userCount[name].id}`}>\n                    {name}\n                  </Link>\n                </td>\n                <td>{userCount[name].count}</td>\n              </tr>\n            )\n          })\n          }\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default User","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { sortBlogs, deleteBlog } from '../reducers/blogReducer'\nimport { Link } from 'react-router-dom'\n\nimport { ListGroup, Button, Table } from 'react-bootstrap'\n\nconst BlogList = ({ blogs }) => {\n  const dispatch = useDispatch()\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const renderedBlogs = blogs.map(blog => {\n    return(\n      <tr key={blog.id}>\n        <td>\n          <Link to={`/blogs/${blog.id}`}>\n            {blog.title}\n          </Link>\n        </td>\n        <td>\n          {blog.author}\n        </td>\n        <td>\n          <Button className=\"ml-2\" variant=\"danger\" onClick={() => dispatch(deleteBlog(blog))} id=\"delete\">delete</Button>\n        </td>\n      </tr>\n    )\n  })\n\n  return (\n    <div>\n      <Button className=\"m-2\" onClick={() => dispatch(sortBlogs())}>Sort Blogs by Likes</Button>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Author</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {renderedBlogs}\n        </tbody>\n      </Table>\n\n    </div>\n  )\n}\n\nexport default BlogList","import { useState } from 'react'\nimport React from 'react'\n\nimport { Form, Button } from 'react-bootstrap'\n\nconst BlogForm = ({ handleSubmit }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleBlogPost = ( event, user ) => {\n    event.preventDefault()\n    const blog = { title, author, url, user }\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n    handleSubmit(blog)\n    return\n  }\n\n  return (\n    <Form onSubmit={handleBlogPost} id=\"blogForm\">\n      <Form.Group>\n        <Form.Label>Title:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          id=\"text\"\n          value={title}\n          name=\"blog_title\"\n          onChange={({ target }) => setTitle(target.value)}\n          required\n        />\n        <Form.Label>Author:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          id=\"author\"\n          value={author}\n          name=\"blog_author\"\n          onChange={({ target }) => setAuthor(target.value)}\n          required\n        />\n        <Form.Label>URL:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          id=\"url\"\n          value={url}\n          name=\"blog_url\"\n          onChange={({ target }) => setUrl(target.value)}\n          required\n        />\n        <Button type=\"submit\" className=\"mt-2 ml-2\">create</Button>\n      </Form.Group>\n    </Form>\n  )\n}\n\nexport default BlogForm","import React from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport { ListGroup } from 'react-bootstrap'\n\nconst Users = ({ blogs }) => {\n  const id = useParams().id\n  const userBlogs = blogs.filter(blog => blog.user.id === id)\n  if (userBlogs.length === 0) {\n    return null\n  }\n  const username = userBlogs[0].user.username\n\n  const renderedBlogList =\n    <ListGroup>\n      {userBlogs.map(blog => {\n        return (\n          <ListGroup.Item key={blog.id}>\n            <Link to={`/blogs/${blog.id}`}>\n              {blog.title}\n            </Link>\n          </ListGroup.Item>\n        )\n      })}\n    </ListGroup>\n\n  return (\n    <div>\n      <h4>{username}</h4>\n      <h2>Added Blogs</h2>\n      {renderedBlogList}\n    </div>\n  )\n}\n\nexport default Users","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\n\nimport { vote, addComment } from '../reducers/blogReducer'\n\nimport { Button, Form, ListGroup } from 'react-bootstrap'\n\nconst Blog = ({ blogs }) => {\n  const dispatch = useDispatch()\n  const id = useParams().id\n  const [newComment, setNewComment] = useState('')\n\n  const blog = blogs.find(blog => blog.id === id)\n  if (!blog) {\n    return null\n  }\n\n  const submitComment = (event) => {\n    event.preventDefault()\n    dispatch(addComment(blog, newComment))\n    setNewComment('')\n  }\n\n  const comments = blog.comments\n  const renderedComments = comments.map((comment, index) => {\n    return (\n      <ListGroup.Item key={index}>\n        {comment}\n      </ListGroup.Item>\n    )\n  })\n\n  return (\n    <div>\n      <h2><em>{blog.title}</em></h2>\n      <a href={blog.url} >{blog.url}</a>\n      <p className=\"mt-2\">\n        Likes <span id=\"likes\">{blog.likes}</span>{'  '}\n        <Button type=\"button\" className=\"likeButton\" size=\"sm\" variant=\"outline-secondary\" onClick={() => dispatch(vote(blog))} id=\"likeButton\">Like</Button>\n      </p>\n      <p>Added by {blog.user ? blog.user.username : null}</p>\n      <h3>Comments</h3>\n      <Form inline onSubmit={submitComment}>\n        <Form.Control\n          className=\"mb-2 mr-sm-2 col-5\"\n          value={newComment}\n          onChange={(event) => setNewComment(event.target.value)}\n        />\n        <Button type=\"submit\" className=\"mb-2\">Add Comment</Button>\n      </Form>\n      <ListGroup className=\"mb-2 mr-sm-2 col-5\" variant=\"flush\">\n        {renderedComments}\n      </ListGroup>\n    </div>\n  )\n}\n\nexport default Blog\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { logoutUser } from '../reducers/userReducer'\n\nimport { Link } from 'react-router-dom'\n\nimport { Navbar, Nav, Button, Form } from 'react-bootstrap'\n\nconst BlogNav = ({ user }) => {\n  const dispatch = useDispatch()\n\n  return (\n    <>\n      <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link as={Link} to='/blogs'>Blogs</Nav.Link>\n          <Nav.Link as={Link} to='/users'>Users</Nav.Link>\n        </Nav>\n        <Nav>\n          { user ?\n            <>\n              <Navbar.Brand>{`${user.username} logged in`}</Navbar.Brand>\n              <Button onClick={() => dispatch(logoutUser()) }>Log out</Button>\n            </>\n            : <Nav.Item>\n              <Nav.Link as={Link} to='/login'>Login</Nav.Link>\n            </Nav.Item>\n          }\n        </Nav>\n      </Navbar>\n    </>\n  )\n}\n\nexport default BlogNav","import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { useField } from '../hooks'\nimport { addUser } from '../reducers/userReducer'\n\nimport { Container, Form, Button } from 'react-bootstrap'\n\nimport { useHistory, Link } from 'react-router-dom'\n\nconst SignUp = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const username = useField('text')\n  const password = useField('password')\n\n  const submitForm = (event) => {\n    event.preventDefault()\n    dispatch(addUser(username.value, password.value))\n      .then(() => history.push('/login'))\n      .catch(() => console.log('invalid signup'))\n  }\n\n  return (\n    <Container fluid>\n      <h2>Sign Up</h2>\n      <Form onSubmit={submitForm}>\n        <Form.Group controlId=\"formUsername\">\n          <Form.Label>Username:</Form.Label>\n          <Form.Control {...username} placeholder=\"Enter Username\" />\n          <Form.Text className=\"text-muted\">\n            Username must be unique\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control {...password} placeholder=\"Enter Password\" />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Sign Up\n        </Button>\n        <Link to=\"/login\">\n          <Button variant=\"secondary\" className=\"m-2\">\n            Login\n          </Button>\n        </Link>\n      </Form>\n    </Container>\n  )\n}\n\nexport default SignUp","import React, { useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from 'react-router-dom'\n\nimport { Button } from 'react-bootstrap'\n\nimport { initializeBlogs, createBlog } from './reducers/blogReducer'\nimport { initUser } from './reducers/userReducer'\n\nimport Togglable from './components/Togglable'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport Users from './components/Users'\nimport BlogList from './components/BlogList'\nimport BlogForm from './components/BlogForm'\nimport User from './components/User'\nimport Blog from './components/Blog'\nimport BlogNav from './components/BlogNav'\nimport SignUp from './components/SignUp'\n\nimport './App.css'\n\nconst App = () => {\n  if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n    console.log(process.env.NODE_ENV)\n  } else {\n    console.log(process.env.NODE_ENV)\n    console.log = function(){}\n  }\n  const dispatch = useDispatch()\n\n  const blogs = useSelector(state => state.blogs)\n\n  const user = useSelector(state => state.user)\n\n  useEffect(() => {\n    dispatch(initUser())\n  }, [])\n\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [])\n\n\n  const blogFormRef = useRef()\n\n  const handleBlogCreate = (blog) => {\n    dispatch(createBlog(blog))\n    blogFormRef.current.toggleVisibility()\n  }\n\n  return (\n    <div className=\"container\">\n      <Router>\n        <BlogNav user={user} />\n        <Notification />\n        <h2>Blogs</h2>\n        <Switch>\n          <Route path=\"/users/:id\">\n            <User blogs={blogs} />\n          </Route>\n          <Route path=\"/users\">\n            <Users blogs={blogs} />\n          </Route>\n          <Route path=\"/blogs/:id\">\n            <Blog blogs={blogs} />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm />\n          </Route>\n          <Route path=\"/\">\n            <div>\n              {user ?\n                <Togglable buttonLabel={'New Blog'} ref={blogFormRef}>\n                  <BlogForm user={user} handleSubmit={handleBlogCreate} />\n                </Togglable>\n                : <Link to=\"/login\">\n                  <Button variant=\"warning\" className=\"ml-2\">\n                    Login to add a blog\n                  </Button>\n                </Link>\n              }\n              <BlogList blogs={blogs} />\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport App from './App'\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n)"],"sourceRoot":""}